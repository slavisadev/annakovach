"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// This file was generated by modules-webmake (modules for web) project.
// See: https://github.com/medikoo/modules-webmake
(function (modules) {
  'use strict';

  var _resolve,
      getRequire,
      wmRequire,
      notFoundError,
      findFile,
      extensions = {
    ".js": [],
    ".json": [],
    ".css": [],
    ".html": []
  },
      envRequire = typeof require === 'function' ? require : null;

  notFoundError = function notFoundError(path) {
    var error = new Error("Could not find module '" + path + "'");
    error.code = 'MODULE_NOT_FOUND';
    return error;
  };

  findFile = function findFile(scope, name, extName) {
    var i, ext;
    if (typeof scope[name + extName] === 'function') return name + extName;

    for (i = 0; ext = extensions[extName][i]; ++i) {
      if (typeof scope[name + ext] === 'function') return name + ext;
    }

    return null;
  };

  _resolve = function resolve(scope, tree, path, fullPath, state, id) {
    var name, dir, exports, module, fn, found, ext;
    path = path.split('/');
    name = path.pop();

    if (name === '.' || name === '..') {
      path.push(name);
      name = '';
    }

    while ((dir = path.shift()) != null) {
      if (!dir || dir === '.') continue;

      if (dir === '..') {
        scope = tree.pop();
        id = id.slice(0, id.lastIndexOf('/'));
      } else {
        tree.push(scope);
        scope = scope[dir];
        id += '/' + dir;
      }

      if (!scope) throw notFoundError(fullPath);
    }

    if (name && typeof scope[name] !== 'function') {
      found = findFile(scope, name, '.js');
      if (!found) found = findFile(scope, name, '.json');
      if (!found) found = findFile(scope, name, '.css');
      if (!found) found = findFile(scope, name, '.html');

      if (found) {
        name = found;
      } else if (state !== 2 && _typeof(scope[name]) === 'object') {
        tree.push(scope);
        scope = scope[name];
        id += '/' + name;
        name = '';
      }
    }

    if (!name) {
      if (state !== 1 && scope[':mainpath:']) {
        return _resolve(scope, tree, scope[':mainpath:'], fullPath, 1, id);
      }

      return _resolve(scope, tree, 'index', fullPath, 2, id);
    }

    fn = scope[name];
    if (!fn) throw notFoundError(fullPath);
    if (fn.hasOwnProperty('module')) return fn.module.exports;
    exports = {};
    fn.module = module = {
      exports: exports,
      id: id + '/' + name
    };
    fn.call(exports, exports, module, getRequire(scope, tree, id));
    return module.exports;
  };

  wmRequire = function wmRequire(scope, tree, fullPath, id) {
    var name,
        path = fullPath,
        t = fullPath.charAt(0),
        state = 0;

    if (t === '/') {
      path = path.slice(1);
      scope = modules['/'];

      if (!scope) {
        if (envRequire) return envRequire(fullPath);
        throw notFoundError(fullPath);
      }

      id = '/';
      tree = [];
    } else if (t !== '.') {
      name = path.split('/', 1)[0];
      scope = modules[name];

      if (!scope) {
        if (envRequire) return envRequire(fullPath);
        throw notFoundError(fullPath);
      }

      id = name;
      tree = [];
      path = path.slice(name.length + 1);

      if (!path) {
        path = scope[':mainpath:'];

        if (path) {
          state = 1;
        } else {
          path = 'index';
          state = 2;
        }
      }
    }

    return _resolve(scope, tree, path, fullPath, state, id);
  };

  getRequire = function getRequire(scope, tree, id) {
    return function (path) {
      return wmRequire(scope, [].concat(tree), path, id);
    };
  };

  return getRequire(modules, [], '');
})({
  "workspace": {
    "inc": {
      "assets": {
        "js": {
          "frontend": {
            "wizard.js": function wizardJs(exports, module, require) {
              (function ($) {
                var isLandingPage, localizationVarName;
                $(function () {
                  isLandingPage = $('#tcb_landing_page').length;

                  if (isLandingPage) {
                    $('body').append('<div class="ttb-wizard-border"></div>');
                  }
                });

                if (!window.parent) {
                  return;
                }
                /**
                 * Get the object that was localized for this request.
                 * It's possible to localize this page under a different constant name
                 *
                 * @return {Object}
                 */


                function localizationData() {
                  if (!localizationVarName) {
                    localizationVarName = location.hash.match(/localize=(\w+)/);
                    localizationVarName = localizationVarName ? localizationVarName[1] : 'thrive_front_localize';
                  }

                  return window[localizationVarName];
                }
                /**
                 * Get the `wizardView` instance and the context in which it's defined in the parent frame
                 *
                 * wizardView is a Backbone.View instance defined in the parent frame that communicates with this javascript file
                 *
                 * The object where it's defined can be controlled by a `obj=SomeOtherObject` string in the hash portion of the current page URL
                 * example: http://localhost/wordpress/some-url?wizard=1#obj=TTD.Context1.Context2 - will search for the instance in `TTD.Context1.Context2.wizardView`
                 *
                 * By default this will be defined in a `TTD.objects` context (if location.hash does not contain #obj=...)
                 *
                 * @return {{view: {Backbone.View|null}, context: {*}}}
                 */


                function getParentContext() {
                  /* a default object to return if context cannot be calculated */
                  var invalidContext = {
                    view: null,
                    context: null
                  };
                  var parentNamespace = location.hash.match(/obj=([\w.]+)/);
                  /* default to `TTD.objects` */

                  parentNamespace = parentNamespace ? parentNamespace[1] : 'TTD.objects';
                  var parts = parentNamespace.split('.');
                  parentNamespace = window.parent;
                  /* parent context main object where the wizard is stored */

                  var context = parentNamespace[parts[0]];

                  while (parts.length) {
                    var field = parts.shift();

                    if (!parentNamespace[field]) {
                      return invalidContext;
                    }

                    parentNamespace = parentNamespace[field];
                  }

                  if (!parentNamespace.wizardView) {
                    return invalidContext;
                  }

                  return {
                    view: parentNamespace.wizardView,
                    context: context
                  };
                }

                var _getParentContext = getParentContext(),
                    view = _getParentContext.view,
                    context = _getParentContext.context;

                if (!view) {
                  return;
                }
                /* store a reference to this frame's jquery instance in the parent context */


                context.$ = $;
                var wizard = view.model;

                var wizardGet = function wizardGet() {
                  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : wizard.get('active');

                  switch (type) {
                    case 'header':
                    case 'woo_header':
                      return $('.ttb-placeholder.p-header,.thrv_header');

                    case 'footer':
                    case 'woo_footer':
                      return $('.ttb-placeholder.p-footer,.thrv_footer');

                    case 'sidebar':
                      return $('#theme-sidebar-section');

                    default:
                      return $();
                  }
                };
                /**
                 * Handles replacing the current wizard element with a new jquery element
                 *
                 * @param {jQuery} $replacement
                 * @param {string} type
                 */


                var replaceElement = function replaceElement($replacement) {
                  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : wizard.get('active');

                  switch (type) {
                    case 'sidebar':
                      $('style.ttd-wizard-sidebar-style').remove();
                      var $sidebar = wizardGet();
                      var needsInit = !$sidebar.length;
                      var $new = $replacement.filter('aside');

                      if (needsInit) {
                        /* emulate an off-screen sidebar - this is the only way it makes sense for now - the wizard preview has not been built for inline or hidden sidebars */
                        $sidebar = $new.clone().empty().attr('data-display-type', JSON.stringify({
                          desktop: 'off-screen'
                        }));
                        $('#content .main-container').prepend($sidebar);
                        /* TODO: make this better */

                        requestAnimationFrame(function () {
                          $('body').addClass('theme-has-off-screen-sidebar visible-off-screen-sidebar').attr({
                            'data-off-screen-side': 'left',
                            'data-off-screen-type': 'push',
                            'style': '--off-screen-sidebar-size:330px'
                          });
                          ThriveTheme.initElements();
                        });
                      }

                      $new.attr('style', $sidebar.attr('style'));

                      if (typeof $new[0] !== 'undefined') {
                        $.each($sidebar[0].dataset, function (key, value) {
                          if (key !== 'selector') {
                            $new[0].dataset[key] = value;
                          }
                        });
                      }

                      $sidebar.replaceWith($replacement);
                      break;

                    default:
                      wizardGet(type).replaceWith($replacement);
                      break;
                  }
                };

                var refreshPosition = window.refreshPosition = function () {
                  var l = localizationData();

                  if (shouldScroll()) {
                    $('html').scrollTop(10000);
                  }

                  wizard.iframeData = view.iframeData = {
                    headerHeight: wizardGet('header').outerHeight(),
                    footerHeight: wizardGet('footer').outerHeight(),
                    sidebarWidth: wizardGet('sidebar').outerWidth(),
                    scrollWidth: window.innerWidth - document.documentElement.offsetWidth,

                    /* stores the loaded template id for the current page */
                    templateId: Array.from(document.body.classList).filter(function (cls) {
                      return cls.startsWith('tve-theme-');
                    }).map(function (cls) {
                      return Number(cls.replace('tve-theme-', ''));
                    }).pop(),

                    /* stores the next / previous links for page previews (homepage step, "PAGE" option) */
                    nextPage: l.wizard.next_page,
                    prevPage: l.wizard.prev_page
                  };

                  if (isLandingPage) {
                    $('.ttb-wizard-border').css({
                      top: view.iframeData.headerHeight,
                      bottom: view.iframeData.footerHeight
                    });
                  }

                  view.buildOverlay();
                };
                /**
                 * Check if the wizard iframe needs to be scrolled
                 *
                 * @return {*|boolean}
                 */


                var shouldScroll = function shouldScroll() {
                  var l = localizationData();
                  return l && (l.wizard.step === 'footer' || l.wizard.step === 'woo_footer');
                };

                $(window).on('load', function () {
                  refreshPosition();
                });

                window.onbeforeunload = function () {
                  delete view.iframeAPI;
                };

                $(function () {
                  view.iframeAPI = {
                    getPreviewElement: wizardGet,
                    inlinePreview: function inlinePreview(template) {
                      var $new = $(template.html);
                      replaceElement($new);
                      var $nodes = $new.find('style,img').add($new.filter('style'));
                      var total = $nodes.length;
                      /* If there are resources to be loaded, refreshPosition() must be called after all of them have been downloaded */

                      if ($nodes.length) {
                        $nodes.on('load', function () {
                          total--;

                          if (total === 0) {
                            requestAnimationFrame(refreshPosition);
                          }
                        });
                        /* The img element doesn't always fire a load event, so we will need to call the refreshPosition manually */

                        setTimeout(function () {
                          if (total !== 0) {
                            refreshPosition();
                          }
                        }, 500);
                      } else {
                        /* otherwise, we can directly call refreshPosition(), there's nothing else to load */
                        requestAnimationFrame(refreshPosition);
                      }
                    }
                  };
                  $('a, div').on('click', function () {
                    return false;
                  });
                  /* if preview step is footer, scroll to bottom of the page */

                  if (shouldScroll()) {
                    $('html').scrollTop(10000);
                  }

                  requestAnimationFrame(refreshPosition);
                });
              })(jQuery);
            }
          }
        }
      }
    }
  }
})("workspace/inc/assets/js/frontend/wizard");
