#!/usr/bin/env php
<?php
require 'vendor/autoload.php';
use GuzzleHttp\Client;

const BASE_URL = 'https://api.aweber.com/1.0/';

// Create a Guzzle client
$client = new GuzzleHttp\Client();

// Load credentials
$credentials = parse_ini_file('credentials.ini');
$accessToken = $credentials['accessToken'];

/**
 * Get all of the entries for a collection
 *
 * @param Client $client HTTP Client used to make a GET request
 * @param string $accessToken Access token to pass in as an authorization header
 * @param string $url Full url to make the request
 * @return array Every entry in the collection
 */
function getCollection($client, $accessToken, $url) {
    $collection = array();
    while (isset($url)) {
        $request = $client->get($url,
            ['headers' => ['Authorization' => 'Bearer ' . $accessToken]]
        );
        $body = $request->getBody();
        $page = json_decode($body, true);
        $collection = array_merge($page['entries'], $collection);
        $url = isset($page['next_collection_link']) ? $page['next_collection_link'] : null;
    }
    return $collection;
}

/**
 * Return the full name of a campaign type code
 *
 * @param string $campaignType
 * @return string
 */
function campaignTypeName($campaignType) {
    if ($campaignType == 'b') {
        return 'broadcast';
    } elseif ($campaignType == 'f') {
        return 'followup';
    } else {
        return "\"${$campaignType}\" type campaign";
    }
}

// Get an account to search on
$accounts = getCollection($client, $accessToken, BASE_URL . 'accounts');
$account = $accounts[0];  // choose the first account

// Get a list to find messages on
$lists = getCollection($client, $accessToken, $account['lists_collection_link']);
$list = $lists[0];  // choose the first list

// Get a followup or broadcast to get links for
$campaignsUrl = $list['campaigns_collection_link'];
$campaigns = getCollection($client, $accessToken, $campaignsUrl);
$campaign = $campaigns[0];  // choose the first campaign
$type = campaignTypeName($campaign['campaign_type']);
echo "Clicks for {$type} \"{$campaign['subject']}\" by link:\n";

// Cache subscriber email addresses to avoid looking them up repeatedly
$subscriberEmails = array();

// Get all the links included in the message
$linksUrl = $campaign['links_collection_link'];
$links = getCollection($client, $accessToken, $linksUrl);
foreach ($links as $link) {
    echo "{$link['url']}\n";
    // Get all the clicks for each link
    $clicksUrl = $link['clicks_collection_link'];
    $clicks = getCollection($client, $accessToken, $clicksUrl);
    foreach ($clicks as $click) {
        // Look up the email address of each subscriber who clicked
        $subscriberUrl = $click['subscriber_link'];
        if (!isset($subscriberEmails[$subscriberUrl])) {
            // First time looking up a subscriber: save the email for next time
            $subscriberBody = $client->get($subscriberUrl)->getBody();
            $subscriber = json_decode($subscriberBody, true);
            $subscriberEmails[$subscriberUrl] = $subscriber['email'];
        }
        $email = $subscriberEmails[$subscriberUrl];
        echo "    {$click['event_time']}: {$email}\n";
    }
}
