#!/usr/bin/env php
<?php
require 'vendor/autoload.php';
use GuzzleHttp\Client;

const BASE_URL = 'https://api.aweber.com/1.0/';

// Create a Guzzle client
$client = new GuzzleHttp\Client();

// Load credentials
$credentials = parse_ini_file('credentials.ini');
$accessToken = $credentials['accessToken'];

/**
 * Get all of the entries for a collection
 *
 * @param Client $client HTTP Client used to make a GET request
 * @param string $accessToken Access token to pass in as an authorization header
 * @param string $url Full url to make the request
 * @return array Every entry in the collection
 */
function getCollection($client, $accessToken, $url) {
    $collection = array();
    while (isset($url)) {
        $request = $client->get($url,
            ['headers' => ['Authorization' => 'Bearer ' . $accessToken]]
        );
        $body = $request->getBody();
        $page = json_decode($body, true);
        $collection = array_merge($page['entries'], $collection);
        $url = isset($page['next_collection_link']) ? $page['next_collection_link'] : null;
    }
    return $collection;
}

// Get an account to manage custom fields on
$accounts = getCollection($client, $accessToken, BASE_URL . 'accounts');
$accountUrl = $accounts[0]['self_link'];
// get all the list entries for the first account
$listsUrl = $accounts[0]['lists_collection_link'];
$lists = getCollection($client, $accessToken, $listsUrl);
// get a sent broadcast
$params = array(
    'ws.op' => 'find',
    'campaign_type' => 'b'
);
$campaignsUrl = $lists[0]['campaigns_collection_link'];
$broadcastsUrl = $campaignsUrl . '?' . http_build_query($params);
$sentBroadcasts = getCollection($client, $accessToken, $broadcastsUrl);
$broadcast = $sentBroadcasts[0];  // get the first broadcast to retrieve stats

echo "Broadcast id: {$broadcast['id']} Subject: {$broadcast['subject']} Sent At: {$broadcast['sent_at']}\n";

// get the stats for the first broadcast
$stats = getCollection($client, $accessToken, $broadcast['stats_collection_link']);

// look at every stat for the first broadcast
foreach ($stats as $stat) {
    $values = $stat['value'];

    // stats entries can be in many formats
    // daily stats are shown over 14 days
    // hourly stats are shown over 24 hours
    // some stats show the top 10 (e.g. webhits_by_link)
    // some stats show total counts (e.g. total_clicks)
    if (is_array($values) && count($values) > 0) {
        echo "\n{$stat['description']}:\n";
        foreach ($values as $key => $value) {
            echo "\n";  // add an extra newline between each item
            foreach ($value as $itemKey => $itemValue) {
                echo "    {$itemKey}: $itemValue\n";
            }
        }
    } elseif (!is_array($values) && isset($values)) {
        echo "\n{$stat['description']}: {$values}\n";
    } else {
        echo "\n{$stat['description']}: N/A\n";
    }
}
