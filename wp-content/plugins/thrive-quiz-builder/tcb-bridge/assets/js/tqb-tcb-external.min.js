/*! Thrive Quiz Builder - 2022-01-25
* http://www.thrivethemes.com/
* Copyright (c) 2022 Thrive Themes */
!function(a){"use strict";var b,c,d,e,f,g={".js":[],".json":[],".css":[],".html":[]},h="function"==typeof require?require:null;return e=function(a){var b=new Error("Could not find module '"+a+"'");return b.code="MODULE_NOT_FOUND",b},f=function(a,b,c){var d,e;if("function"==typeof a[b+c])return b+c;for(d=0;e=g[c][d];++d)if("function"==typeof a[b+e])return b+e;return null},b=function(a,d,g,h,i,j){var k,l,m,n,o,p;for(g=g.split("/"),k=g.pop(),"."!==k&&".."!==k||(g.push(k),k="");null!=(l=g.shift());)if(l&&"."!==l&&(".."===l?(a=d.pop(),j=j.slice(0,j.lastIndexOf("/"))):(d.push(a),a=a[l],j+="/"+l),!a))throw e(h);if(k&&"function"!=typeof a[k]&&(p=f(a,k,".js"),p||(p=f(a,k,".json")),p||(p=f(a,k,".css")),p||(p=f(a,k,".html")),p?k=p:2!==i&&"object"==typeof a[k]&&(d.push(a),a=a[k],j+="/"+k,k="")),!k)return 1!==i&&a[":mainpath:"]?b(a,d,a[":mainpath:"],h,1,j):b(a,d,"index",h,2,j);if(!(o=a[k]))throw e(h);return o.hasOwnProperty("module")?o.module.exports:(m={},o.module=n={exports:m,id:j+"/"+k},o.call(m,m,n,c(a,d,j)),n.exports)},d=function(c,d,f,g){var i,j=f,k=f.charAt(0),l=0;if("/"===k){if(j=j.slice(1),!(c=a["/"])){if(h)return h(f);throw e(f)}g="/",d=[]}else if("."!==k){if(i=j.split("/",1)[0],!(c=a[i])){if(h)return h(f);throw e(f)}g=i,d=[],j=j.slice(i.length+1),j||(j=c[":mainpath:"],j?l=1:(j="index",l=2))}return b(c,d,j,f,l,g)},(c=function(a,b,c){return function(e){return d(a,[].concat(b),e,c)}})(a,[],"")}({workspace:{"tcb-bridge":{assets:{js:{external:{"main.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/23/2017.\n */\nvar TVE = window.TVE || {};\n\n( function ( $ ) {\n\t/**\n\t * On TCB Main Ready\n\t */\n\t$( window ).on( 'tcb_main_ready', function () {\n\n\t\tTVE.Views.Components.quiz = require( '../external/quiz-component' );\n\n\t\tTVE.add_filter( 'tcb.toc.headers', function ( $headers ) {\n\t\t\treturn $headers.not( '.thrive-quiz-builder-shortcode *' );\n\t\t} );\n\n\t} );\n\tTVE.add_action( 'tcb-ready', function () {\n\t\trequire( './shortcodes' )().render();\n\t} );\n} )( jQuery );\n//# sourceURL=workspace/tcb-bridge/assets/js/external/main.js")},"qna-question-preview.js":function(exports,module,require){eval("var data;\n\nfunction tpl( slug ) {\n\tvar template = data.qna_templates[ slug ];\n\n\tif ( ! template ) {\n\t\treturn null;\n\t}\n\n\ttemplate = jQuery( '<textarea/>' ).html( template ).text();\n\n\treturn _.template( template, _.templateSettings );\n}\n\nvar baseModel = Backbone.Model.extend( {\n\tinitialize: function ( attr ) {\n\t\tif ( attr.settings ) {\n\t\t\tthis.set( 'settings', new Backbone.Model( attr.settings ) );\n\t\t}\n\t},\n\tget_image: function () {\n\t\tif ( typeof this.get( 'image' ) === 'string' ) {\n\t\t\treturn this.get( 'image' );\n\t\t}\n\n\t\treturn this.get( 'image' ).sizes.full.url;\n\t}\n} );\n\nmodule.exports = function ( $root, args ) {\n\n\targs.question.data.display_settings = JSON.parse( args.question.data.display_settings );\n\targs.question.data.settings = JSON.parse( args.question.data.settings );\n\n\tdata = args;\n\n\tvar model = new baseModel( args.question.data );\n\n\t$root.html( args.qna_html ? args.qna_html : args.html );\n\n\tvar $shortcode = $root.is( '.tqb-shortcode-new-content' ) ? $root : $root.find( '.tqb-shortcode-new-content' );\n\n\t$shortcode.append( tpl( 'questionWrapper' )() );\n\t$shortcode.find( '.tqb-question-container' ).replaceWith( tpl( 'questionContainer' )( {\n\t\titem: model,\n\t\tdisplay_type: args.question.data.display_settings.type\n\t} ) );\n\n\tif ( model.get( 'media' ) ) {\n\t\t$shortcode.prepend( model.get( 'media' ) )\n\t}\n\n\t$shortcode.find( '.tqb-question-text' ).replaceWith( tpl( 'questionText' )( {item: model} ) );\n\t$shortcode.find( '.tqb-question-description' ).replaceWith( tpl( 'questionDescription' )( {item: model} ) );\n\n\tif ( model.get_image() ) {\n\t\t$shortcode.find( '.tqb-question-container' ).append(\n\t\t\t'<div class=\"tqb-question-image-container\"><img src=\"' + model.get_image() + '\"></div>'\n\t\t)\n\t}\n\n\t$shortcode.find( '.tqb-answers-container' ).replaceWith( tpl( 'answersContainer' )() );\n\n\t_.each( args.question.answers, function ( answer ) {\n\n\t\tvar tplName = 'answerItem';\n\t\tvar answerModel = new baseModel( answer );\n\n\t\tif ( 3 === parseInt( model.get( 'q_type' ) ) ) {\n\t\t\ttplName = 'answerOpenItem';\n\t\t} else if ( answer.image ) {\n\t\t\ttplName = 'answerImageItem';\n\t\t\t$shortcode.find( '.tqb-answers-container' ).addClass( 'tqb-answer-has-image' );\n\t\t}\n\n\t\tvar $answerHtml = jQuery( tpl( tplName )( {\n\t\t\titem: answerModel,\n\t\t\tquestion: model,\n\t\t\tsettings: model.get( 'settings' )\n\t\t} ) );\n\n\t\tif ( answerModel.get( 'image' ) ) {\n\t\t\t$answerHtml.find( '.tqb-answer-image-container' )\n\t\t\t           .html( '<img src=\"' + answerModel.get_image() + '\" alt=\"\" class=\"tqb-answer-image\">' );\n\t\t}\n\n\t\t$shortcode.find( '.tqb-answers-container' ).append( $answerHtml[ 0 ].outerHTML );\n\n\t\tif ( 3 === parseInt( model.get( 'q_type' ) ) ) {\n\t\t\tvar $html = jQuery( '<div/>' )\n\t\t\t\t.addClass( 'tqb-answer-oeq' )\n\t\t\t\t.html( model.get( 'settings' ).get( 'placeholder' ) );\n\n\t\t\t$shortcode.find( '.tqb-answer-action' ).removeClass( 'tqb-open-ended-wrapper' );\n\t\t\t$shortcode.find( '.tqb-answer-open-type' ).html( $html ).addClass( 'tqb-answer-oeq-type' ).removeClass( 'tqb-answer-open-type' );\n\t\t\t$shortcode.find( '.tqb-answer-inner-wrapper' ).removeClass( 'tqb-open-ended-wrapper' );\n\t\t}\n\t} );\n\t$shortcode.find( '.tqb-fancy-container, .tqb-open-type-button, .tqb-answer-open-type .thrv_text_element' ).remove();\n\t$shortcode.removeClass( 'tcb-row-empty tcb-elem-placeholder' );\n\t$shortcode.find( '.tqb-image-answer' ).removeClass( 'tqb-hide' );\n\n\tvar $css = jQuery( '<style/>' )\n\t\t.addClass( 'tve_custom_style' )\n\t\t.html( args.tve_custom_style );\n\n\tif ( $shortcode.is( '.tqb-shortcode-new-content' ) ) {\n\t\t$shortcode.append( $css );\n\t} else {\n\t\t$shortcode.find( '.tqb-shortcode-new-content' ).append( $css );\n\t}\n}\n//# sourceURL=workspace/tcb-bridge/assets/js/external/qna-question-preview.js")},"quiz-component.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/23/2017.\n */\n\nvar shortcode_base = TVE.shortcode_manager,\n\tSearchPanel = require( '../external/quiz-search' );\n\nmodule.exports = TVE.Views.Base.component.extend( {\n\tcontrols_init: function () {\n\t\tvar self = this;\n\n\t\tthis.controls[ 'change_quiz' ].update = function ( $element ) {\n\t\t\tvar _config = self.get_config();\n\n\t\t\tthis.setValue( _config[ 'quiz_id' ] );\n\t\t};\n\n\t\tthis.controls[ 'change_quiz' ].input = function ( $element, dom ) {\n\t\t\tTVE.main.trigger( 'insert_quiz', dom.value );\n\t\t};\n\n\t\tthis.controls[ 'quiz_scroll' ].update = function ( $element ) {\n\t\t\tvar _enable_scroll;\n\n\t\t\tif ( $element.attr( 'data-enable_scroll' ) ) {\n\t\t\t\t_enable_scroll = $element.attr( 'data-enable_scroll' ) === 'on';\n\t\t\t} else {\n\t\t\t\tvar _config = self.get_config();\n\t\t\t\tvar _scroll = _.filter( this.model.config.options, function ( item ) {\n\t\t\t\t\treturn item.id && parseInt( item.id ) === parseInt( _config[ 'quiz_id' ] );\n\t\t\t\t} )[ 0 ];\n\n\t\t\t\t_enable_scroll = _scroll.scroll.enable_scroll && parseInt( _scroll.scroll.enable_scroll );\n\t\t\t}\n\n\t\t\tthis.setChecked( _enable_scroll );\n\t\t};\n\n\t\tthis.controls[ 'quiz_scroll' ].input = function ( $element, dom ) {\n\t\t\tvar val = dom.checked === true ? 'on' : 'off';\n\n\t\t\t$element.attr( 'data-enable_scroll', val );\n\t\t};\n\n\t\tthis.placeholder_panel = new SearchPanel( {\n\t\t\tcomponent: this,\n\t\t\tminWidth: 250,\n\t\t\tno_buttons: true\n\t\t} );\n\n\t\tTVE.main.on( 'insert_quiz', function ( quiz_id ) {\n\n\t\t\tself.quiz_ajax( {\n\t\t\t\tquiz_id: quiz_id\n\t\t\t} ).done( function ( response ) {\n\t\t\t\tif ( response ) {\n\t\t\t\t\tTVE.Editor_Page.blur();\n\t\t\t\t\tresponse = TVE.apply_filters( 'tqb_change_quiz_before_insert', response );\n\n\t\t\t\t\tif ( response.qna_templates ) {\n\t\t\t\t\t\trequire( './qna-question-preview' )( TVE.ActiveElement, response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTVE.ActiveElement.html( response );\n\t\t\t\t\t}\n\n\t\t\t\t\tTVE.ActiveElement.removeClass( 'tcb-row-empty tcb-elem-placeholder' );\n\t\t\t\t\tTVE.ActiveElement.find( '.tqb-fancy-icon' ).remove();\n\t\t\t\t\tTVE.ActiveElement.removeAttr( 'data-enable_scroll' );\n\t\t\t\t\tTVE.inner.window.TCB_Front.handleIframes( TVE.ActiveElement, true );\n\t\t\t\t\tTVE.Editor_Page.focus_element( TVE.ActiveElement );\n\t\t\t\t}\n\n\t\t\t\tTVE.main.overlay( 'close' );\n\t\t\t} );\n\t\t} );\n\n\t\tTVE.add_filter( 'tcb.symbol.before_save', function ( data ) {\n\t\t\tvar quizConfig = '__CONFIG_quiz_shortcode__';\n\n\t\t\tif ( data.symbol_content.includes( quizConfig ) ) {\n\t\t\t\tvar $content = jQuery( '<div>' + data.symbol_content + '</div>' ),\n\t\t\t\t\t$configObj = $content.find( '.thrive-quiz-builder-shortcode > .thrive-shortcode-config' ),\n\t\t\t\t\tconfigContent, matches, config;\n\t\t\t\tif ( $configObj.length ) {\n\t\t\t\t\tconfigContent = $configObj.html();\n\t\t\t\t\tmatches = configContent.match( new RegExp( quizConfig + \"(.*)\" + quizConfig ) );\n\n\t\t\t\t\tif ( matches ) {\n\t\t\t\t\t\tconfig = JSON.parse( matches[ 1 ] );\n\t\t\t\t\t\tconfig.in_tcb_editor = 'inside_tcb';\n\t\t\t\t\t}\n\n\t\t\t\t\t$configObj.html( quizConfig + JSON.stringify( config ) + quizConfig );\n\t\t\t\t\tdata.symbol_content = $content.html();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t} );\n\n\t},\n\tplaceholder_action: function () {\n\t\tthis.placeholder_panel.open( TVE.ActiveElement, TVE.ActiveElement.find( '.tcb-inline-placeholder-action' ) )\n\t},\n\n\t/**\n\t * Returns Quiz Shortcode Settings\n\t *\n\t * @returns {*}\n\t */\n\tget_config: function () {\n\t\tvar shortcode_config = shortcode_base( TVE.ActiveElement.find( '.thrive-shortcode-config' ), 'quiz_shortcode' );\n\n\t\treturn shortcode_config.get();\n\t},\n\n\t/**\n\t * Executes an ajax request that returns the HTML code for displaying the quiz\n\t *\n\t * @param data\n\t * @param ajax_param\n\t */\n\tquiz_ajax: function ( data, ajax_param ) {\n\t\tvar params = {\n\t\t\ttype: 'post',\n\t\t\tdataType: 'json',\n\t\t\turl: tqb_page_data.ajaxurl\n\t\t};\n\t\tTVE.main.overlay();\n\t\tdata.action = 'tqb_frontend_ajax_controller';\n\t\tdata.route = 'shortcode';\n\t\tdata.tqb_in_tcb_editor = 'inside_tcb';\n\t\tdata._nonce = tqb_page_data.security;\n\t\tparams.data = data;\n\n\t\tif ( ajax_param ) {\n\t\t\tfor ( var k in ajax_param ) {\n\t\t\t\tparams[ k ] = ajax_param[ k ];\n\t\t\t}\n\t\t}\n\n\t\treturn jQuery.ajax( params, data );\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/external/quiz-component.js")},"quiz-search.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/23/2017.\n */\n\n( function ( $ ) {\n\tmodule.exports = TVE.Views.InlinePanel.extend( {\n\t\ttemplate: TVE.tpl( 'inline/content-templates' ),\n\t\tafter_initialize: function () {\n\t\t\tthis.$( '.drop-panel' ).addClass( 'small-pad tcb-autocomplete' );\n\t\t\tthis.autocomplete();\n\t\t},\n\t\tautocomplete: function () {\n\t\t\tvar $el = this.$el;\n\n\t\t\tthis.$input = this.$( '.tcb-search' ).autocomplete( {\n\t\t\t\tminLength: 0,\n\t\t\t\tsource: function ( request, response ) {\n\t\t\t\t\tvar results = $.ui.autocomplete.filter( tqb_page_data.quizzes, request.term );\n\n\t\t\t\t\tresponse( results.slice( 0, 5 ) );\n\t\t\t\t},\n\t\t\t\tappendTo: this.$( '.popup-content' ),\n\t\t\t\tselect: function ( e, ui ) {\n\t\t\t\t\tTVE.main.trigger( 'insert_quiz', ui.item.id );\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\topen: function ( event, ui ) {\n\t\t\t\t\t$el.find( '.ui-menu-item-wrapper' ).removeClass( 'ui-menu-item-wrapper ui-state-active' );\n\t\t\t\t},\n\t\t\t} );\n\n\t\t\tthis.$input.data( 'ui-autocomplete' )._renderItem = function ( ul, item ) {\n\t\t\t\tul.addClass( 'tcb-suggest' );\n\t\t\t\tvar r = new RegExp( this.term, 'i' ),\n\t\t\t\t\tli = $( '<li></li>' ).data( 'item.autocomplete', item )\n\t\t\t\t\t                     .append( '<a href=\"#\" class=\"tcb-truncate\">' + item.label.replace( r, '<span class=\"highlight\">' + this.term + '</span>' ) + '</a>' )\n\t\t\t\t\t                     .appendTo( ul );\n\t\t\t\treturn li;\n\t\t\t};\n\t\t},\n\t\tonOpen: function () {\n\t\t\tthis.$input.val( '' ).focus().autocomplete( 'search' );\n\t\t}\n\t} );\n} )( jQuery );\n//# sourceURL=workspace/tcb-bridge/assets/js/external/quiz-search.js")},"shortcodes.js":function(exports,module,require){eval("var CONFIG_KEY = 'quiz_shortcode';\nvar SHORTCODE_ELEMENT = '.thrive-quiz-builder-shortcode';\nvar CONFIG_ELEMENT = '.thrive-shortcode-config';\n\nfunction getConfig( $element ) {\n\n\treturn TVE.shortcode_manager( $element.find( CONFIG_ELEMENT ), CONFIG_KEY ).get();\n}\n\nfunction ajax( data ) {\n\n\tvar params = {\n\t\ttype: 'post',\n\t\tdataType: 'json',\n\t\turl: tqb_page_data.ajaxurl\n\t};\n\tTVE.main.overlay();\n\tdata.action = 'tqb_frontend_ajax_controller';\n\tdata.route = 'render_shortcode';\n\tdata._nonce = tqb_page_data.security;\n\tparams.data = data;\n\n\treturn jQuery.ajax( params, data );\n}\n\nfunction handle( $root ) {\n\n\t$root = $root || TVE.Editor_Page.editor;\n\n\treturn {\n\t\t$_root: $root,\n\t\tids: [],\n\t\tgetIds: function () {\n\n\t\t\tif ( this.ids.length ) {\n\t\t\t\treturn this.ids;\n\t\t\t}\n\n\t\t\t_.each( this.$_root.find( SHORTCODE_ELEMENT ), function ( el ) {\n\t\t\t\tvar $element = jQuery( el );\n\t\t\t\tvar config = getConfig( $element );\n\n\t\t\t\tthis.ids.push( config.quiz_id );\n\t\t\t}, this );\n\n\t\t\treturn this.ids;\n\t\t},\n\t\tfetch: function () {\n\t\t\treturn ajax( {quizzes: this.getIds()} );\n\t\t},\n\t\trender: function () {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.fetch().done( function ( response ) {\n\t\t\t\t_.each( response, function ( data, id ) {\n\t\t\t\t\tself.html( data );\n\t\t\t\t} )\n\n\t\t\t\tTVE.main.overlay( 'close' );\n\t\t\t} )\n\t\t},\n\t\thtml: function ( args ) {\n\n\t\t\tvar $shortcode = this.$_root.find( '.tqb-shortcode-new-content[data-quiz-id=\"' + args.quiz_id + '\"]' );\n\n\t\t\tif ( typeof args.qna_templates === 'object' ) {\n\t\t\t\trequire( './qna-question-preview' )( $shortcode, args );\n\t\t\t} else {\n\t\t\t\t$shortcode.html( args.html );\n\t\t\t\t$shortcode.find( '.tqb-fancy-icon' ).remove();\n\t\t\t\tTVE.inner.window.TCB_Front.handleIframes( $shortcode, true );\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = handle;\n//# sourceURL=workspace/tcb-bridge/assets/js/external/shortcodes.js")}}}}}}})("workspace/tcb-bridge/assets/js/external/main");